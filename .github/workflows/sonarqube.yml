name: SonarQube Analysis
on:
  workflow_dispatch: {}
  pull_request: {}
  push:
    branches:
      - main
  schedule:
    - cron: '30 0 * * *'

jobs:
  sonarqube:
    name: SonarQube SAST Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      pull-requests: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Cache SonarQube packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install SonarQube Scanner
        run: |
          mkdir -p ~/.sonar/scanner
          curl -sSLo ~/.sonar/scanner/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip ~/.sonar/scanner/sonar-scanner.zip -d ~/.sonar/scanner
          echo "~/.sonar/scanner/sonar-scanner-4.8.0.2856-linux/bin" >> $GITHUB_PATH

      - name: Run SonarQube Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=vulnerable-nodejs-app \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.javascript.node.maxFileSize=8192 \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.qualitygate.wait=true

      - name: Generate SARIF file
        if: always()
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          curl -o sonar-results.sarif \
            -H "Authorization: Bearer $SONAR_TOKEN" \
            "$SONAR_HOST_URL/api/issues/export?projectKey=vulnerable-nodejs-app&format=sarif"

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: sonar-results.sarif
          
      - name: Add PR Comment
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: sonarqube-results
          message: |
            ### SonarQube Analysis Results
            
            For detailed results, check:
            1. The Security tab for security findings
            2. ${{ env.SONAR_HOST_URL }}/dashboard?id=vulnerable-nodejs-app for full analysis
            
            Key areas analyzed:
            - Code Security Issues
            - Code Quality Issues
            - Code Coverage
            - Code Duplications
            - Coding Standards 